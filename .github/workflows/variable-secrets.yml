# name: Exploring variable and Secrets
# on:
#     push

# jobs:
    # docker:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Docker Build
    #           run: docker build -t docker.io/dockerUsername/imageName:latest
            
    #         - name: Docker Login
    #           run: docker login=dockerUsername --password=s3cUrePaSsw0rd

    #         - name: Docker Publish
    #           run: docker push docker.io/dockerUsername/imageName:latest

    # deploy:
    #     needs: docker
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Docker Run
    #           run: docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest

### env variables can be storedin
## step level
## job level
## workflow level

############### env at step level #############

    # docker:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Docker Build
    #           env: 
    #             CONTAINER_REGISTRY: docker.io
    #             DOCKER_USERNAME: shreyanksharma
    #             IMAGE_NAME: github-actions-nginx
    #             VERSION: latest
    #           #run: docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:$VERSION
    #           #or you can use
    #           run: docker build -t ${{env.CONTAINER_REGISTRY}}/${{env.DOCKER_USERNAME}}/${{env.DOCKER_USERNAME}}:${{env.VERSION}} # advantage of using this is it will give warning if env is not defined
            
    #         - name: Docker Login
    #           env:
    #             DOCKER_PASSWORD: s3cUrePaSsw0rd
    #             DOCKER_USERNAME: shreyanksharma
    #           run: docker login=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

    #         - name: Docker Publish
    #           env: 
    #             CONTAINER_REGISTRY: docker.io
    #             DOCKER_USERNAME: shreyanksharma
    #             IMAGE_NAME: github-actions-nginx
    #             VERSION: latest
    #           run: docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:$VERSION

    # deploy:
    #     needs: docker
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Docker Run
    #           env: 
    #             CONTAINER_REGISTRY: docker.io
    #             DOCKER_USERNAME: shreyanksharma
    #             IMAGE_NAME: github-actions-nginx
    #             VERSION: latest
    #           run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:$VERSION


    ############### env at job level #############
    # if env defined at jop level, all steps will have access to the envv but that that good

    ############### env at workflow level #############
    # on: 
    #     push
    # env:
    #     <define envs here>
